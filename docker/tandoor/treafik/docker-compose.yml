version: "3.9"

networks:
  public-network:
    external: true
  tandoor-network:
    name: tandoor-network

services:
  tandoor-proxy:
    container_name: tandoor-proxy
    image: nginx:mainline-alpine
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - /path/to/nginx_config:/etc/nginx/conf.d:ro
      - /path/to/staticfiles:/static:ro
      - /path/to/mediafiles:/media:ro
    labels:
      - traefik.docker.network=public
      - traefik.enable=true
      - traefik.http.routers.tandoor.entrypoints=websecure
      - traefik.http.routers.tandoor.rule=Host(`SUBDOMAIN.EXAMPLE.com`)
      - traefik.http.routers.tandoor.tls=true
      - traefik.http.routers.tandoor.tls.certresolver=letsencrypt # change if you are not using Lets Encrypt
    depends_on:
      - tandoor
    networks:
      - tandoor-network
      - public-network
      
  tandoor:
    container_name: tandoor
    image: vabene1111/recipes
    restart: unless-stopped
    volumes:
      - /path/to/nginx_config:/opt/recipes/nginx/conf.d
      - /path/to/staticfiles:/opt/recipes/staticfiles
      - /path/to/mediafiles:/opt/recipes/mediafiles
    depends_on:
      - tandoor-db
    networks:
      - tandoor-network
    environment:
      - DEBUG=0
      - SECRET_KEY=CHANGE_ME
      - GUNICORN_MEDIA=0
      - DB_ENGINE=django.db.backends.postgresql
      - POSTGRES_HOST=tandoor-db
      - POSTGRES_USER=djangodb
      - POSTGRES_PASSWORD=CHANGE_ME
      - POSTGRES_PORT=5432
      - POSTGRES_DB=djangodb
      
  tandoor-db:
    container_name: tandoor-db
    restart: unless-stopped
    image: postgres:11-alpine
    environment:
      POSTGRES_PASSWORD: CHANGE_ME
      POSTGRES_USER: djangodb
    volumes:
      - /path/to/data:/var/lib/postgresql/data
    networks:
      - tandoor-network